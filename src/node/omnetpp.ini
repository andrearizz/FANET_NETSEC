[General]
network = Fanet

num-rngs = 3

**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2

*.host[*].numApps = 1
*.host[*].app[0].typename = "PingApp"
*.host[*].app[0].startTime = uniform(1s,5s)
*.host[*].app[0].printPing = true

*.attacker[*].numApps = 1
*.attacker[*].app[0].typename = "PingApp"
*.attacker[*].app[0].startTime = uniform(1s,5s)
*.attacker[*].app[0].printPing = true

# scene visualization
*.visualizer.osgVisualizer.typename = "IntegratedOsgVisualizer"
*.visualizer.osgVisualizer.sceneVisualizer.clearColor = "skyblue"
*.visualizer.osgVisualizer.sceneVisualizer.sceneImage = "showcases/desert"
*.visualizer.osgVisualizer.sceneVisualizer.sceneImageSize = 5000m
*.visualizer.osgVisualizer.sceneVisualizer.axisLength = 1000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinX = -2000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinY = -2000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMinZ = 0m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxX = 3000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxY = 3000m
*.visualizer.osgVisualizer.sceneVisualizer.sceneMaxZ = 1000m

# network node visualization: disable labels
*.visualizer.osgVisualizer.networkNodeVisualizer.displayModuleName = false

# mobility visualization
*.visualizer.*.mobilityVisualizer.displayMobility = true # master switch
*.visualizer.*.mobilityVisualizer.displayPositions = true
*.visualizer.*.mobilityVisualizer.displayOrientations = true
*.visualizer.*.mobilityVisualizer.displayVelocities = true
*.visualizer.*.mobilityVisualizer.displayMovementTrails = true
*.visualizer.*.mobilityVisualizer.animationSpeed = 1

# Packet Drop
*.visualizer.*.packetDropVisualizer.displayPacketDrops = true
*.visualizer.*.packetDropVisualizer.labelFormat = "%n/reason: %r"

# mobility constraint area
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 1000m
**.constraintAreaMaxZ = 1000m

#Display Signal Propagation

*.visualizer.*.mediumVisualizer.signalPropagationAnimationSpeed = 500/3e8
*.visualizer.*.mediumVisualizer.signalTransmissionAnimationSpeed = 50000/3e8
*.visualizer.*.mediumVisualizer.displaySignals = true
*.visualizer.*.mediumVisualizer.displayTransmissions = true
*.visualizer.*.mediumVisualizer.displayReceptions = true
*.visualizer.*.mediumVisualizer.transmissionPlacementPriority = 10
*.visualizer.*.mediumVisualizer.receptionPlacementPriority = 10

# showing propagating signals
*.visualizer.*.mediumVisualizer.displaySignals = true
*.visualizer.*.mediumVisualizer.signalFadingDistance=50m
*.visualizer.*.mediumVisualizer.signalRingSize=50m
*.visualizer.osgVisualizer.mediumVisualizer.signalShape = "both"

# no configurator needed (there is no communication between hosts)
#**.networkConfiguratorModule = ""

*.host[*].osgModel = "3d/drone.ive.100.scale.0,0,90.rot"

*.host[*].mobility.typename = "MassMobility"
*.host[*].mobility.changeInterval = 1s
*.host[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
*.host[*].mobility.initialMovementElevation = uniform(-90deg, 90deg)
*.host[*].mobility.angleDelta = uniform(-10deg,10deg)
*.host[*].mobility.rotationAxisAngle = uniform(-10deg,10deg)
*.host[*].mobility.speed = uniform(10mps,20mps)
*.host[*].mobility.faceForward = false


*.attacker[*].mobility.typename = "MassMobility"
*.attacker[*].mobility.changeInterval = 1s
*.attacker[*].mobility.initialMovementHeading = uniform(0deg, 360deg)
*.attacker[*].mobility.initialMovementElevation = uniform(-90deg, 90deg)
*.attacker[*].mobility.angleDelta = uniform(-10deg,10deg)
*.attacker[*].mobility.rotationAxisAngle = uniform(-10deg,10deg)
*.attacker[*].mobility.speed = uniform(10mps,20mps)
*.attacker[*].mobility.faceForward = false


**.constraintAreaMinZ = 200m


